- var path = '../'
- var title = 'cqrs - viewmodel'
!!! 5
html(lang="en")
  head
    include ../includes/layout/head

  body
    include ../includes/layout/header

    include ../includes/layout/content
      .documentation
        .row-fluid
          .span8
            .hero-unit
              h2
                | viewmodel
                //- small  - translation made easy
              p viewmodel is a node.js module for multiple databases. It can be very useful if you work with (d)ddd, cqrs, eventdenormalizer, host, etc.

          .span4.downloads
            p node.js:
            pre
              code
                | npm install viewmodel

            p
              | Build status:
              a(href='https://travis-ci.org/adrai/node-viewmodel')
                img(src='https://img.shields.io/travis/adrai/node-viewmodel.svg')

            p
              | Release:
              a(href='https://npmjs.org/package/viewmodel')
                img(src='https://img.shields.io/npm/v/viewmodel.svg')

            .alert.alert-info.feature-description(style='margin-top: 25px;')
                a(href='https://github.com/adrai/node-viewmodel')
                  i.icon-github
                  |  fork me on github
                br
                a(href='https://github.com/adrai/node-viewmodel/issues')
                  i.icon-github
                  |  issues

        .row-fluid
          .span12
            h2 Connecting

            .row-fluid
              .span4
                h4.feature-title Connecting to an in-memory repository in read mode
                p Simply take the read function

              .span8
                .feature
                  pre
                    code
                      | var viewmodel = require('viewmodel');
                      | 
                      | viewmodel.read(function(err, repository) {
                      |       if(err) {
                      |           console.log('ohhh :-(');
                      |           return;
                      |       }
                      |  });

            .row-fluid
              .span4
                h4.feature-title Connecting to any repository (mongodb in the example / mode=write)
                p Simply take the write function
                  br
                  | and call it with options.

              .span8
                .feature
                  pre
                    code
                      | var viewmodel = require('viewmodel');
                      | 
                      | viewmodel.write(
                      |     {
                      |         type: 'mongodb',
                      |         host: 'localhost',      // optional
                      |         port: 27017,            // optional
                      |         dbName: 'viewmodel',    // optional
                      |         username: 'user',       // optional
                      |         password: 'pwd'         // optional
                      |     },
                      |     function(err, repository) {
                      |         if(err) {
                      |             console.log('ohhh :-(');
                      |             return;
                      |         }
                      |     }
                      | );

                  .alert.alert-info.feature-description
                    h6 Important hint:
                    p Be sure you have installed the db driver!
                    p In this example run:
                    pre
                      code
                        | npm install mongodb

            .row-fluid
              .span4
                h4.feature-title Catch connect ad disconnect events
                p Simply listen to connect and disconnect events.

              .span8
                .feature
                  pre
                    code
                      | var repository = viewmodel.write({ type: 'mongodb' });
                      | repository.on('connect', function() {
                      |     console.log('hello from event');
                      |     // or here
                      | });
                      | repository.on('disconnect', function() {
                      |     console.log('bye');
                      | });
                      | repository.connect();

        .row-fluid
          .span12
            h2 Work with a viewmodel

            .row-fluid
              .span4
                h4.feature-title Define a collection
                p Simply extend the repository with a collectionName.

              .span8
                .feature
                  pre
                    code
                      | var dummyRepo = repo.extend({
                      |     collectionName: 'dummy'
                      | });

            .row-fluid
              .span4
                h4.feature-title Create a new viewmodel (only in write mode)
                p Calling get without an id will generate a new not persisted viewmodel with generated id.

              .span8
                .feature
                  pre
                    code
                      | dummyRepo.get(function(err, vm) {
                      |     if(err) {
                      |         console.log('ohhh :-(');
                      |         return;
                      |     }
                      | 
                      |     vm.set('myProp', 'myValue');
                      |     vm.set('myProp.deep', 'myValueDeep');
                      | 
                      |     console.log(vm.toJSON());
                      | 
                      |     console.log(vm.has('myProp.deep'));
                      | 
                      |     dummyRepo.commit(vm, function(err) {
                      |     });
                      |     // or you can call commit directly on vm...
                      |     vm.commit(function(err) {
                      |     });
                      | });

            .row-fluid
              .span4
                h4.feature-title Find...
                p The query object is like the mongodb query object.

              .span8
                .feature
                  pre
                    code
                      | dummyRepo.find({ color: 'green' }, function(err, vms) {
                      |     if(err) {
                      |         console.log('ohhh :-(');
                      |         return;
                      |     }
                      | 
                      |     // vms is an array
                      |     var firstItem = vms[0];
                      |     console.log('the id: ' + firstItem.id);
                      |     console.log('the saved value: ' + firstItem.get('color'));
                      | });

            .row-fluid
              .span4
                h4.feature-title Find with query options
                p The query options object is like the mongodb query object.

              .span8
                .feature
                  pre
                    code
                      | dummyRepo.find({ color: 'green' }, { limit: 2, skip: 1 }, function(err, vms) {
                      |     if(err) {
                      |         console.log('ohhh :-(');
                      |         return;
                      |     }
                      | 
                      |     // vms is an array
                      |     var firstItem = vms[0];
                      |     console.log('the id: ' + firstItem.id);
                      |     console.log('the saved value: ' + firstItem.get('color'));
                      | });

            .row-fluid
              .span4
                h4.feature-title Find/Get by id...
                p Calling get with an id will try to fetch the preferred viewmodel from the repository.
                p If an object with such an id does not exists the returning viewmodel is null.

              .span8
                .feature
                  pre
                    code
                      | dummyRepo.get('myId', function(err, vm) {
                      |     if(err) {
                      |         console.log('ohhh :-(');
                      |         return;
                      |     }
                      | 
                      |     console.log('the id: ' + vm.id);
                      |     console.log('the saved value: ' + vm.get('color'));
                      | });

            .row-fluid
              .span4
                h4.feature-title Delete a viewmodel (only in write mode)
                p Simply call destroy on a viewmodel and commit it.

              .span8
                .feature
                  pre
                    code
                      | dummyRepo.get('myId', function(err, vm) {
                      |     if(err) {
                      |         console.log('ohhh :-(');
                      |         return;
                      |     }
                      | 
                      |     vm.destroy();
                      | 
                      |     dummyRepo.commit(vm, function(err) {
                      |     });
                      |     // or you can call commit directly on vm...
                      |     vm.commit(function(err) {
                      |     });
                      | });

        .row-fluid
          .span12
            h2 Other helping function

            .row-fluid
              .span4
                h4.feature-title Obtain a new id
                p Simply call getNewId.

              .span8
                .feature
                  pre
                    code
                      | dummyRepo.getNewId(function(err, newId) {
                      |     if(err) {
                      |         console.log('ohhh :-(');
                      |         return;
                      |     }
                      | 
                      |     console.log('the new id is: ' + newId);
                      | });

            .row-fluid
              .span4
                h4.feature-title Clear a "collection"
                p Simply call clear. (only in write mode)

              .span8
                .feature
                  pre
                    code
                      | dummyRepo.clear(function(err) {
                      |     if(err) {
                      |         console.log('ohhh :-(');
                      |         return;
                      |     }
                      | });

        .row-fluid
          .span12
            h2 Implementation differences

            .row-fluid
              .span4
                h4.feature-title mongodb
                p For mongodb you can define indexes for performance boosts in find function.

              .span8
                .feature
                  pre
                    code
                      | var dummyRepo = repository.extend({
                      |     collectionName: 'dummy',
                      |     indexes: [
                      |         'profileId',
                      |         // or
                      |         { profileId: 1 },
                      |         // or:
                      |         { index: {profileId: 1}, options: {} }
                      |     ]
                      | });

            .row-fluid
              .span4
                h4.feature-title redis
                p The find function does ignore the query argument and always fetches all items in the collection.

        .row-fluid
          .span12
            h2 Database Support

            .row-fluid
              .span4
                h4.feature-title Currently these databases are supported:

              .span8
                .feature
                  :markdown
                    - inmemory
                    - mongodb ([node-mongodb-native] (https://github.com/mongodb/node-mongodb-native))
                    - couchdb ([cradle] (https://github.com/cloudhead/cradle))
                    - tingodb ([tingodb] (https://github.com/sergeyksv/tingodb))
                    - redis ([redis] (https://github.com/mranney/node_redis))
                    - azuretable ([azure-storage] (https://github.com/Azure/azure-storage-node))

    include ../includes/layout/extra

    include ../includes/layout/footer

    include ../includes/layout/endscripts
